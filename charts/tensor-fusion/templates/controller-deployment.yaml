apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tensor-fusion.fullname" . }}-controller
  namespace: {{ include "tensor-fusion.namespace" . }}
  labels:
    {{- include "tensor-fusion.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "tensor-fusion.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "tensor-fusion.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tensor-fusion.serviceAccountName" . }}
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          command:
            - /manager
            - -metrics-bind-address
            - :9000
          livenessProbe:
            {{- toYaml .Values.controller.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.controller.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: cert
              readOnly: true
              mountPath: /tmp/k8s-webhook-server/serving-certs
        {{- if .Values.agent.agentId }}
        - name: cluster-agent
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag | default "latest" }}"
          env:
            - name: CLOUD_ENDPOINT
              value: "{{ .Values.agent.cloudEndpoint }}"
            - name: AGENT_ID
              value: "{{ .Values.agent.agentId }}"
            - name: ENROLL_TOKEN
              value: "{{ .Values.agent.enrollToken }}"
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
        {{- end }}
        - name: vector
          image: docker.io/timberio/vector:nightly-2025-01-07-debian
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: vector-config
              mountPath: /etc/vector
      volumes:
        - name: cert
          secret:
            secretName: {{.Values.controller.admissionWebhooks.secretName}}
            defaultMode: 420
            items:
              - key: cert
                path: tls.crt
              - key: key
                path: tls.key
        - name: vector-config
          configMap:
            name: {{ include "tensor-fusion.fullname" . }}-vector-config
            defaultMode: 420
        - name: logs
          emptyDir: {}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
