{{- if .Values.alert.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-alert-manager-config
  namespace: {{ include "tensor-fusion.namespace" . }}
  labels:
    tensor-fusion.ai/component: alert-manager
    {{- include "tensor-fusion.labels" . | nindent 4 }}
data:
  alertmanager.yml: |
    {{- toYaml .Values.alert.alertManagerConfig | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-alert-manager
  namespace: {{ include "tensor-fusion.namespace" . }}
  labels:
    tensor-fusion.ai/component: alert-manager
    {{- include "tensor-fusion.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.alert.replicaCount }}
  selector:
    matchLabels:
      tensor-fusion.ai/component: alert-manager
  template:
    metadata:
      creationTimestamp: null
      labels:
        tensor-fusion.ai/component: alert-manager
        {{- include "tensor-fusion.labels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
      {{- if gt (.Values.alert.replicaCount | int) 1 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: tensor-fusion.ai/component
                  operator: In
                  values:
                  - alert-manager
              topologyKey: kubernetes.io/hostname
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-alert-manager-config
            defaultMode: 420
        {{- if not .Values.alert.persistence.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
      containers:
        - name: alertmanager
          image: "{{ .Values.alert.image.repository }}:{{ .Values.alert.image.tag }}"
          args:
            - '--storage.path=/alertmanager'
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--web.listen-address=0.0.0.0:9093'
            {{- if gt (.Values.alert.replicaCount | int) 1 }}
            - '--cluster.listen-address=0.0.0.0:9094'
            - '--cluster.advertise-address=$(POD_IP):9094'
            {{- range $i := until (.Values.alert.replicaCount | int) }}
            - '--cluster.peer={{ $.Release.Name }}-alert-manager-{{ $i }}.alert-manager-headless.{{ include "tensor-fusion.namespace" $ }}.svc.cluster.local:9094'
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
            {{- if gt (.Values.alert.replicaCount | int) 1 }}
            - name: gossip
              containerPort: 9094
              protocol: TCP
            {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources: 
            {{- toYaml .Values.alert.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/alertmanager
            {{- if .Values.alert.persistence.enabled }}
            - name: alertmanager-storage
              mountPath: /alertmanager
            {{- else }}
            - name: storage
              mountPath: /alertmanager
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      restartPolicy: Always
      serviceAccountName: alert-manager
  serviceName: alert-manager-headless
  {{- if .Values.alert.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: alertmanager-storage
    spec:
      accessModes:
        - ReadWriteOnce
      {{- if .Values.alert.persistence.storageClass }}
      storageClassName: {{ .Values.alert.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.alert.persistence.size }}
  {{- end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
---
apiVersion: v1
kind: Service
metadata:
  name: alert-manager
  namespace: {{ include "tensor-fusion.namespace" . }}
  labels:
    tensor-fusion.ai/component: alert-manager
    {{- include "tensor-fusion.labels" . | nindent 4 }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9093
      targetPort: http
    {{- if gt (.Values.alert.replicaCount | int) 1 }}
    - name: gossip
      protocol: TCP
      port: 9094
      targetPort: gossip
    {{- end }}
  selector:
    tensor-fusion.ai/component: alert-manager
  type: ClusterIP
  sessionAffinity: None
  internalTrafficPolicy: Cluster
---
apiVersion: v1
kind: Service
metadata:
  name: alert-manager-headless
  namespace: {{ include "tensor-fusion.namespace" . }}
  labels:
    tensor-fusion.ai/component: alert-manager-headless
    {{- include "tensor-fusion.labels" . | nindent 4 }}
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9093
      targetPort: http
    {{- if gt (.Values.alert.replicaCount | int) 1 }}
    - name: gossip
      protocol: TCP
      port: 9094
      targetPort: gossip
    {{- end }}
  selector:
    tensor-fusion.ai/component: alert-manager
  clusterIP: None
  clusterIPs:
    - None
  type: ClusterIP
  sessionAffinity: None
  internalTrafficPolicy: Cluster

{{- end }}